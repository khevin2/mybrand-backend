{
  "definition": {
    "openapi": "3.0.0",
    "info": {
      "title": "My Brand API",
      "version": "1.0.0",
      "description": "Swagger documentation for my brand api"
    },
    "servers": [
      {
        "url": "http://localhost:6001"
      }
    ],
    "tags": [
      {
        "name": "USER OPERATIONS",
        "description": "User route operations"
      },
      {
        "name": "POST OPERATIONS",
        "description": "Post route operations"
      },
      {
        "name": "USER AUTHENTICATION",
        "description": "Login route"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "names": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "dob": {
              "type": "string"
            },
            "photo": {
              "type": "string"
            }
          }
        },
        "Post": {
          "type": "object",
          "required": ["title", "intro", "body", "photo", "tags"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of a post(every post should have a title!)"
            },
            "intro": {
              "type": "string",
              "description": "Introduction/ summary of a post"
            },
            "body": {
              "type": "string",
              "description": "Body of a post(preferably written in MD)"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "tags(keys) of a post"
            },
            "photo": {
              "type": "string",
              "description": "Main photo of a blog"
            },
            "likes": {
              "type": "string",
              "description": "Number of reaction(likes) on a single post"
            }
          },
          "example": {
            "title": "Check out my new npm package",
            "intro": "The recently project on GSM messages is out",
            "body": "a really long description of my post. Hence post body..",
            "tags": ["npm", "nodeJS", "GSM"],
            "photo": "https://picsum.photos/190/90s",
            "likes": 123
          }
        }
      }
    },
    "paths": {
      "/login": {
        "post": {
          "summary": "Login to use private routes",
          "tags": ["USER AUTHENTICATION"],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login success..",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Could not authenticate"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": ["USER OPERATIONS"],
          "summary": "Get a list of all users",
          "responses": {
            "200": {
              "description": "All Users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised/Unauthenticated"
            },
            "403": {
              "description": "Token invalid - Generate a new one"
            },
            "500": {
              "description": "An error occured"
            }
          }
        },
        "post": {
          "summary": "Add a new user",
          "tags": ["USER OPERATIONS"],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User added successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Unable to save"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get a single user by ID",
          "tags": ["USER OPERATIONS"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "ID of a user"
            }
          ],
          "responses": {
            "200": {
              "description": "User retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "No user found with this ID"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "patch": {
          "summary": "Updates a user",
          "tags": ["USER OPERATIONS"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "ID of a user"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Could not update - check your inputs!"
            },
            "401": {
              "description": "Unauthorised/Unauthenticated"
            },
            "403": {
              "description": "Token invalid - Generate a new one"
            },
            "404": {
              "description": "User not found!"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "summary": "Updates a user",
          "tags": ["USER OPERATIONS"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "ID of a user"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised/Unauthenticated"
            },
            "403": {
              "description": "Token invalid - Generate a new one"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/posts": {
        "get": {
          "summary": "Get a list of all posts",
          "tags": ["POST OPERATIONS"],
          "responses": {
            "200": {
              "description": "List of all posts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "An error occured"
            }
          }
        },
        "post": {
          "summary": "Add a new post",
          "tags": ["POST OPERATIONS"],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created new post",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Ensure all fields are well filed"
            },
            "500": {
              "description": "Server could not process this request properly"
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ]
  },
  "apis": []
}
